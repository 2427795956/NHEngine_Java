package nicehu.pb;
option java_outer_classname = "NHMsgBase";
option optimize_for = SPEED;

message BaseMsg
{
	optional int32 seq = 1;
    optional int32 code = 2;
	optional bool sync = 3;
	optional string data = 4;
	
	optional int32 id       =7;
	optional int32 playerId =5;
	optional bytes msgData =6;
}

message AreaServerInfo
{
    optional int32 areaID = 1;
    repeated int32 serverIDs = 2;
}
message StreamObject 
{
	optional string name = 1;
	optional string streamBuffer = 2;
}
message ServerInfo{
    required int32 id = 1;
    required string serverName = 2;
    required int32 status = 3;
    repeated int32 protocolTypes = 4;
    optional string ipForServer = 5;
    optional int32 portForServer = 6;
	optional int32 areaId = 7;
    optional string ipForClient = 8;
    optional int32 portForSocketClient = 9;
	optional int32 portForHttpClient = 10;
}
message SyncServers{
    repeated ServerInfo servers = 1;
}
message ServerNetworkStatistics
{
	optional string ip = 1;
	optional int32 receiveSpeed = 2;
	optional int32 sendSpeed = 3;
}
message ServerStatistics
{
	optional string serverName = 1;
	optional sint64 time = 2;
	optional double cpuPercent = 3;
	optional sint64 residentMemory = 4;
	optional sint64 virtualMemory = 5;
	optional sint64 sharedMemory = 6;
	optional int32 appReceiveSpeed = 7;
	optional int32 appSendSpeed = 8;
	repeated ServerNetworkStatistics networkStatistics = 9;
}
message Area
{
	required int32 areaId = 1;
	required string name = 2;
	required int32 status = 3;
	optional string gateIp = 4;
	optional int32 gatePort = 5;
}

message NetUID
{
    required int32 playerId = 1;
    required int32 sequenceId = 2;
	optional int64 loginTime = 3;
	optional string ipMessage = 4;
	optional DeviceInfo deviceInfo = 5;
	optional string channelUniqueId = 6;
	optional string channelUserName = 7;
}

message DeviceInfo
{
	optional string oSType = 1;
	optional string oSVersion = 2;
	optional string deviceName = 3;
	optional string udid = 4;
	
}

message Player
{
	optional int32 playerId = 1;
	optional string name = 2;
	optional int64 money = 3;
	optional int64 diamond = 4;
	repeated Item items = 6;
	repeated Equip equips = 7;
	repeated Dungeon dungeons = 8;
}
message CostRewardSync
{
	repeated Cost costs = 1;
	optional Reward reward = 2;	
	optional Cost notEnoughCost = 3;
	optional Reward viewFixReward = 4;
	optional Reward viewRandomreward = 5;
}
message Item
{
	optional int32 id = 1;
	optional int32 count = 2;
}
message Cost
{
	optional int32 id = 1;
	optional int32 count = 2;
	optional string guid = 3;
}
message Reward
{
	repeated Item items = 1;
	repeated Equip equips = 2;
}
message Dungeon
{
    optional int32 id = 1;
	optional int32 star = 2;
	optional int32 score = 3;
}





message Equip
{
	optional string uuid = 1;
	optional int32 id = 2;
	optional int32 sortIdx = 3;
	optional int32 strengthen = 4;
}
message LevelAttrib
{
	optional int32 level = 1;
	optional int64 exp = 2;
}

